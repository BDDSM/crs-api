#Использовать "../src"
#Использовать asserts

Перем ВерсияПлатформы;
Перем АдресХранилища;
Перем ПарольПоУмолчанию;
Перем ИмяХранилища;

&Тест
Процедура ПроверитьСозданиеХранилища() Экспорт

	Пользователь = "Администратор";
	Попытка
		Результат = МенеджерХранилищ.НовоеХранилище1C(АдресХранилища, ИмяХранилища, ВерсияПлатформы, 
			Пользователь, ПарольПоУмолчанию);	
	Исключение
		Результат = "";
	КонецПопытки;

	Ожидаем.Что(Результат).Равно(ИмяХранилища);

КонецПроцедуры

&Тест
Процедура ПроверкаПодключения() Экспорт
	Пользователь = "Администратор";

	МенеджерХранилища = Новый КлиентХранилища(АдресХранилища, ВерсияПлатформы);
	МенеджерХранилища.Подключиться(Пользователь, ПарольПоУмолчанию, ИмяХранилища);
	Ожидаем.Что(МенеджерХранилища.АвторизацияПройдена()).ЕстьИстина();

	МенеджерХранилища.Подключиться(Пользователь, "12345", ИмяХранилища);
	Ожидаем.Что(МенеджерХранилища.АвторизацияПройдена()).ЕстьЛожь();

КонецПроцедуры

&Тест
Процедура СписокПользователей() Экспорт

	Пользователь = "Администратор";
	МенеджерХранилища = Новый КлиентХранилища(АдресХранилища, ВерсияПлатформы);
	МенеджерХранилища.Подключиться(Пользователь, ПарольПоУмолчанию, ИмяХранилища);
	СписокПользователей = МенеджерХранилища.СписокПользователей();

	Ожидаем.Что(СписокПользователей.Количество()).Больше(0);

КонецПроцедуры

&Тест
Процедура НайтиПользователя() Экспорт

	Пользователь = "Администратор";
	МенеджерХранилища = Новый КлиентХранилища(АдресХранилища, ВерсияПлатформы);
	МенеджерХранилища.Подключиться(Пользователь, ПарольПоУмолчанию, ИмяХранилища);

	ПользовательХранилища = МенеджерХранилища.НайтиПользователя(Пользователь);
	Ожидаем.Что(ПользовательХранилища).Существует();
	Ожидаем.Что(ПользовательХранилища.Имя).Равно(Пользователь);

КонецПроцедуры

&Тест
Процедура СоздатьПользователя() Экспорт

	Пользователь = "Администратор";
	МенеджерХранилища = Новый КлиентХранилища(АдресХранилища, ВерсияПлатформы);
	МенеджерХранилища.Подключиться(Пользователь, ПарольПоУмолчанию, ИмяХранилища);

	ИмяПользователя = "user_" + Новый УникальныйИдентификатор();
	ПарольПользователя = "1";
	Права = "5";
	МенеджерХранилища.СоздатьПользователя(ИмяПользователя, ПарольПользователя, Права);

	ПользовательХранилища = МенеджерХранилища.НайтиПользователя(ИмяПользователя);
	Ожидаем.Что(ПользовательХранилища).Существует();
	Ожидаем.Что(ПользовательХранилища.Имя).Равно(ИмяПользователя);
	
КонецПроцедуры

&Тест
Процедура УдалитьПользователя() Экспорт

	Пользователь = "Администратор";
	МенеджерХранилища = Новый КлиентХранилища(АдресХранилища, ВерсияПлатформы);
	МенеджерХранилища.Подключиться(Пользователь, ПарольПоУмолчанию, ИмяХранилища);

	ИмяПользователя = "user_" + Новый УникальныйИдентификатор();
	ПарольПользователя = "1";
	Права = "5";
	МенеджерХранилища.СоздатьПользователя(ИмяПользователя, ПарольПользователя, Права);
	ПользовательХранилища = МенеджерХранилища.НайтиПользователя(ИмяПользователя);

	МенеджерХранилища.УдалитьПользователя(ПользовательХранилища.Идентификатор);

	ПользовательХранилища = МенеджерХранилища.НайтиПользователя(ИмяПользователя);
	Ожидаем.Что(ПользовательХранилища.Имя).Равно(ИмяПользователя);
	Ожидаем.Что(ПользовательХранилища.Удален).ЕстьИстина();

КонецПроцедуры

Процедура Инициализация()

	ИмяХранилища = "newrepo1" + (Новый УникальныйИдентификатор());
	ВерсияПлатформы = "8.3.12.1855";
	АдресХранилища = "http://localhost:5000/repo/repo.1ccr";
	ПарольПоУмолчанию = "1";

КонецПроцедуры

Инициализация();